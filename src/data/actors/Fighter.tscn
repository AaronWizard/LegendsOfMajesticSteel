[gd_scene load_steps=7 format=2]

[ext_resource path="res://src/core/actors/Actor.tscn" type="PackedScene" id=2]
[ext_resource path="res://resources/data/stats/Fighter.tres" type="Resource" id=3]

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

const float TIME_MULT = 6.28 * 2f;

uniform bool flashing;
uniform float dissolve_value : hint_range(0, 1);

uniform vec4 flash_colour : hint_color;
uniform vec4 black_colour : hint_color;
uniform sampler2D dissolve_texture : hint_albedo;

void fragment()
{
	vec4 main_texture = texture(TEXTURE, UV);
	
	if (flashing && (main_texture != black_colour)
			&& (sin(TIME * TIME_MULT) > 0f))
	{
		main_texture.rgb = flash_colour.rgb;
	}
	
	vec4 noise_texture = texture(dissolve_texture, UV);
	main_texture.a *= floor(dissolve_value + min(1, noise_texture.x));
	
	COLOR = main_texture;
}"

[sub_resource type="OpenSimplexNoise" id=14]
period = 8.0

[sub_resource type="NoiseTexture" id=15]
flags = 0
width = 256
height = 256
noise = SubResource( 14 )

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/flashing = false
shader_param/dissolve_value = 1.0
shader_param/flash_colour = Color( 1, 0.129412, 0.32549, 1 )
shader_param/black_colour = Color( 0.0627451, 0.0627451, 0.0627451, 1 )
shader_param/dissolve_texture = SubResource( 15 )

[node name="Fighter" instance=ExtResource( 2 )]
character_name = "Fighter"
actor_definition = ExtResource( 3 )

[node name="Sprite" parent="Center/Offset" index="0"]
material = SubResource( 16 )
